package XML::XSH::CompletionList;

use strict;
use vars qw(@XSH_COMMANDS);

@XSH_COMMANDS=qw(
.
?
add
assign
backups
call
cd
chdir
chxpath
clone
close
complete-attributes
complete_attributes
copy
count
cp
create
debug
def
define
defs
del
delete
dtd
dup
echo
enc
encoding
eval
exec
exit
files
flags
fold
for
foreach
get
help
if
include
indent
insert
keep-blanks
keep_blanks
lcd
list
load-ext-dtd
load-xinclude
load-xincludes
load_ext_dtd
load_xinclude
load_xincludes
local
locate
ls
map
move
mv
new
nobackups
nodebug
open
options
parser-completes-attributes
parser-expands-entities
parser-expands-xinclude
parser_completes_attributes
parser_expands_entities
parser_expands_xinclude
pedantic-parser
pedantic_parser
perl
print
print_value
process
process-xinclude
process-xincludes
process_xinclude
process_xincludes
prune
pwd
query-encoding
query_encoding
quiet
quit
recovering
remove
rm
run-mode
run_mode
save
sed
select
sort
switch-to-new-documents
switch_to_new_documents
system
test-mode
test_mode
transform
unfold
unless
valid
validate
validation
var
variables
vars
verbose
version
while
xadd
xcopy
xcp
xinclude
xincludes
xinsert
xmove
xmv
xsl
xslt
xsltproc
xupdate
);

1;
